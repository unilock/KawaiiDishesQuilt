plugins {
    id 'maven-publish'
    alias libs.plugins.quilt.loom
}

base {
    archivesName = project.archives_base_name
}

version = "$project.version+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
    maven {
        name = 'BlameJared'
        url = 'https://maven.blamejared.com/'
    }
	maven {
		name = 'DevOS'
		url = 'https://mvn.devos.one/snapshots/'
	}
    maven {
        name = 'GeckoLib'
        url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }

	// For Porting Lib
	mavenCentral()
	maven {
		name = 'JitPack'
		url = 'https://jitpack.io'
	}
	maven {
		name = 'JamiesWhiteShirt'
		url = 'https://maven.jamieswhiteshirt.com/libs-release'
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
}

loom {
    mods {
        "kawaiidishes" {
            sourceSet("main")
        }
    }
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
dependencies {
    minecraft libs.minecraft
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.19.3:2023.03.12@zip")
    }
    modImplementation libs.quilt.loader

    modImplementation libs.quilted.fabric.api
    modImplementation libs.geckolib
    modCompileOnlyApi libs.bundles.jei.api
	modImplementation include(libs.porting.lib.get())

    modRuntimeOnly libs.jei
}

processResources {
    inputs.property 'version', version

    filesMatching('quilt.mod.json') {
        expand 'version': version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release = 17
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    withSourcesJar()
}

jar {
    from('LICENSE') {
        rename { "${it}_${base.archivesName.get()}" }
    }
}

// Configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
